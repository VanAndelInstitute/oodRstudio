<%-
  # get partition list
  cmd = "sinfo -ho %R"
  begin
    output, status = Open3.capture2e(cmd)
    if status.success?
      partitions = output.split("\n").map(&:strip).reject(&:blank?).sort
    else
      raise output
    end
  rescue => e
    partitions = []
    error = e.message.strip
  end

  # get R modules
  m_cmd = "bash -il -c 'module -t avail R/ |& grep ^R/' 2>/dev/null"
  begin
    output, status = Open3.capture2e(m_cmd)
    if status.success?
      _list_r_versions = output.split("\n").map(&:strip).reject(&:blank?).sort
    else
      raise output
    end
  rescue => e
    _list_r_versions = []
    m_error = e.message.strip
  end
-%>
---
cluster: "sherlock"

form:
  - sh_r_version
  - sh_modules
  - sh_partition
  - sh_num_cpus
  - sh_num_gpus
  - sh_mem
  - sh_num_nodes
  - bc_num_hours
  - bc_email_on_started

attributes:

  sh_modules:
    label: "Additional modules to load (optional)"
    help: |
        <small>Space separated list of additional environment modules to load.</br/>
        Full list at https://www.sherlock.stanford.edu/docs/software/list </small>

  sh_r_version:
    label: "R version"
    <%- if m_error -%>
      <span class="text-danger">Error when parsing module versions:</span>
      ```
      <%= m_error.gsub("\n", "\n      ") %>
      ```
    <%- end -%>
    <%- if _list_r_versions.blank? -%>
    widget: text_field
    <%- else -%>
    widget: select
    options:
      <%- _list_r_versions.each do |q| -%>
      - [ "<%= q %>", "<%= q %>" ]
      <%- end -%>
    <%- end -%>


  sh_partition:
    label: "Partition"
    value: "dev"
    help: |
      <small>Partition to submit the job to.</small>
    <%- if error -%>

      <span class="text-danger">Error when parsing partitions:</span>

      ```
      <%= error.gsub("\n", "\n      ") %>
      ```
    <%- end -%>
  <%- if partitions.blank? -%>
    widget: text_field
  <%- else -%>
    widget: select
    options:
    <%- partitions.each do |q| -%>
      - [ "<%= q %>", "<%= q %>" ]
    <%- end -%>
  <%- end -%>

  sh_num_cpus:
    label: "Number of CPUs"
    widget: "number_field"
    help: "<small>Number of CPU-cores to use on each node</small>"
    min: 1
    value: "1"

  sh_num_gpus:
    label: "Number of GPUs (optional)"
    widget: "number_field"
    help: "<small>Number of GPUs to use on each node. <br/>When requesting GPUs, don't forget to load the `cuda` module in the `Modules` field above.</small>"
    min: 1
    max: 8
    value: ""

  sh_mem:
    label: "Amount of memory (GB) (optional)"
    widget: "number_field"
    help: "<small>Amount of memory to allocate</small>"

  sh_num_nodes:
    label: "Number of nodes"
    widget: "number_field"
    value: "1"
    help: "<small>Number of compute nodes to request, only useful for network-aware parallel frameworks such as MPI.</small>"

  bc_num_hours:
    label: "Runtime (in hours)"
