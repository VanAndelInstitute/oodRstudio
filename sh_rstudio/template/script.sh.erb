#!/usr/bin/env bash

#
# Load modules
#

# Purge the module environment to avoid conflicts
#module reset

# Load the rstudio module (required)
export RSTUDIOVERSION="<%= context.sh_rstudio_version %>"
export PATH=$PATH:/varidata/research/software/rstudioserver/<%= context.sh_rstudio_version %>/bin

# Load the requested R module (required)
module load <%= context.sh_r_version %>

<%- unless context.sh_modules.blank? -%>
# Load additional modules (optional)
module load <%= context.sh_modules %>
<%- end -%>


#
# Start RStudio Server
#

# PAM auth helper used by RStudio
export RSTUDIO_AUTH="${PWD}/bin/auth"

#database conf
export RDATABASECONF="${PWD}/database.conf"
echo "directory=${PWD}" >> "${RDATABASECONF}"

#rsession conf
export RSESSIONCONF="${PWD}/rsession.conf"
echo "#" >> "${RSESSIONCONF}"
if [[ "$RSTUDIOVERSION" > "2023-06-02-999" ]]; then
   echo "copilot-enabled=1" >> "${RSESSIONCONF}"
fi


# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${PWD}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${PWD}/rsession.log"
  exec &>>"\${RSESSION_LOG_FILE}"

  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"

# Set working directory to home directory
cd "${HOME}"

# Launch the RStudio Server
echo "Starting up rserver..."
set -x
rserver \
  --www-port ${port} \
  --server-user ${USER} \
  --auth-none 0 \
  --auth-pam-helper-path "${RSTUDIO_AUTH}" \
  --auth-encrypt-password 0 \
  --rsession-path "${RSESSION_WRAPPER_FILE}" \
  --rsession-config-file "${RSESSIONCONF}" \
  --database-config-file "${RDATABASECONF}" \
  --server-data-dir "${TMPDIR}" \
  --secure-cookie-key-file "${TMPDIR}/rstudio-server/secure-cookie-key" 2>&1
