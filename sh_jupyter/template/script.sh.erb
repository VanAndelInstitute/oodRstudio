#!/bin/bash -i

# Benchmark info
echo "TIMING - Starting main script at: $(date)"

# Set working directory to home directory
cd "${HOME}"

#
# Start Jupyter Notebook Server
#

# Purge the module environment to avoid conflicts
module purge

# Load the python  module (required)
module load <%= context.sh_python_version %>

<%- unless context.sh_modules.blank? -%>
# Load the require modules
module load <%= context.sh_modules %>
<%- end -%>

# List loaded modules
module list

#make label for  python venv and activate
VENV=`echo jupyter_<%= context.sh_python_version %> | tr -c '[:alnum:]._-' '_'`

if [ ! -d  /home/$USER/$VENV ] && [ -d /varidata/research/software/jupyter/$VENV ] ; then
  echo preloading python files from /varidata/research/software/jupyter/$VENV
  cp -Pr  /varidata/research/software/jupyter/$VENV .
  sed -i "s/pyuser/$USER/g" $HOME/$VENV/bin/[Aajnhiqsw]*
  sed -i "s/pyuser/$USER/g" $HOME/$VENV/bin/pip*
  sed -i "s/pyuser/$USER/g" $HOME/$VENV/bin/pyj*
  sed -i "s/pyuser/$USER/g" $HOME/$VENV/bin/pyg*
  sed -i "s/pyuser/$USER/g" $HOME/$VENV/bin/pyb*
fi

python -m venv /home/$USER/$VENV
echo created venv /home/$USER/$VENV
source /home/$USER/$VENV/bin/activate

#install jupyter if needed
#pip3 install jupyter
which jupyter
# Benchmark info
echo "TIMING - Starting jupyter at: $(date)"

# Launch the Jupyter Notebook Server
set -x
jupyter notebook --config="${CONFIG_FILE}" <%= context.sh_extra_jupyter_args %>
